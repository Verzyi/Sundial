name: Build and Release
on: push

jobs:
  weasyprint-build:
    name: Build WeasyPrint
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]') "
    steps:
      - uses: actions/checkout@v2
      - name: Build weasyprint
        run: |
          make build/weasyprint-layer-python3.8.zip
      - name: Test weasyprint
        run: |
          mkdir output
          TEST_FILENAME=output/report.pdf make test.weasyprint
          TEST_FILENAME=output/report.png make test.weasyprint
      - name: Upload pdf
        uses: actions/upload-artifact@v1
        with:
          name: WeasyPrint test results
          path: output
      - name: Create WeasyPrint Release
        id: create_weasyprint_release
        if: startsWith(github.ref, 'refs/tags/weasyprint-')
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release WeasyPrint layer
      - name: Upload WeasyPrint Layer
        if: startsWith(github.ref, 'refs/tags/weasyprint-')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_weasyprint_release.outputs.upload_url }}
          asset_path: ./build/weasyprint-layer-python3.8.zip
          asset_name: weasyprint-layer-python3.8.zip
          asset_content_type: application/zip

  wkhtmltox-build:
    name: Build wkhtmltox
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]') "
    steps:
      - uses: actions/checkout@v2
      - name: Build wkhtmltox
        run: |
          make build/wkhtmltox-layer.zip
          make build/wkhtmltopdf-layer.zip
          make build/wkhtmltoimage-layer.zip
      - name: Test wkhtmltox
        run: |
          mkdir output
          TEST_FILENAME=output/google.pdf make test.wkhtmltox
          TEST_FILENAME=output/google.png make test.wkhtmltox
      - name: Upload pdf
        uses: actions/upload-artifact@v1
        with:
          name: wkhtmltox test results
          path: output
      - name: Create wkhtmltox Release
        id: create_wkhtmltox_release
        if: startsWith(github.ref, 'refs/tags/wkhtmltox-')
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release wkhtmltox layer
      - name: Upload wkhtmltox Layer
        if: startsWith(github.ref, 'refs/tags/wkhtmltox-')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_wkhtmltox_release.outputs.upload_url }}
          asset_path: ./build/wkhtmltox-layer.zip
          asset_name: wkhtmltox-layer.zip
          asset_content_type: application/zip
      - name: Upload wkhtmltopdf Layer
        if: startsWith(github.ref, 'refs/tags/wkhtmltox-')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_wkhtmltox_release.outputs.upload_url }}
          asset_path: ./build/wkhtmltopdf-layer.zip
          asset_name: wkhtmltopdf-layer.zip
          asset_content_type: application/zip
      - name: Upload wkhtmltoimage Layer
        if: startsWith(github.ref, 'refs/tags/wkhtmltox-')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_wkhtmltox_release.outputs.upload_url }}
          asset_path: ./build/wkhtmltoimage-layer.zip
          asset_name: wkhtmltoimage-layer.zip
          asset_content_type: application/zip
