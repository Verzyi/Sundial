"""empty message

Revision ID: fc5e27dbdf4e
Revises: 809c8137cb62
Create Date: 2023-10-19 10:30:59.359778

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fc5e27dbdf4e'
down_revision = '809c8137cb62'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('_alembic_tmp_builds_table')
    with op.batch_alter_table('builds_table', schema=None) as batch_op:
        batch_op.alter_column('BuildID',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('CreatedBy',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('CreatedOn',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('FacilityName',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('SJBuild',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('AlloyName',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('MachineID',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('BuildName',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('Notes',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('BuildStartTime',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('BuildFinishTime',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('BlendID',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('Location',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('PlateSerial',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('MinChargeAmount',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('MaxChargeAmount',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('DosingBoostAmount',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('RecoaterSpeed',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('ParameterRev',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('MeasuredLaserPower',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('InitialDosingFactor',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('MaxFinishHeight',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('MaxBuildTime',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('MaxDateDifference',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('StartLaserHours',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('FinalLaserHours',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('InertTime',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('F9FilterSerial',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('H13FilterSerial',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('BreakoutTime',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('RecoaterType',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('VeloFlowSoftwareRev',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('VeloFlowSoftwareBase',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('VeloFlowBuildTimeSkin',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('VeloFlowBuildTimeSupport',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('VeloFlowBuildTimeRecoater',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('LayerCount',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('Platform',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('BuildType',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)

    with op.batch_alter_table('inventory_virgin_batch', schema=None) as batch_op:
        batch_op.alter_column('BatchID',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('BatchCreatedBy',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('BatchTimeStamp',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('BatchFacilityID',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('ProductID',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('VirginPO',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('VirginLot',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)

    with op.batch_alter_table('machines', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'location', ['LocationID'], ['LocationID'])

    with op.batch_alter_table('material_alloys', schema=None) as batch_op:
        batch_op.alter_column('AlloyID',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('Alloy',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('MaterialName',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('MaterialID',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('AlloyName',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.create_unique_constraint(None, ['AlloyID'])

    with op.batch_alter_table('material_products', schema=None) as batch_op:
        batch_op.alter_column('ProductID',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('SupplierProduct',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('AlloyID',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.create_unique_constraint(None, ['ProductID'])

    with op.batch_alter_table('powder_blend_calc', schema=None) as batch_op:
        batch_op.alter_column('BlendID',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
        batch_op.alter_column('PartID',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
        batch_op.alter_column('SieveCount',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)

    with op.batch_alter_table('powder_blend_parts', schema=None) as batch_op:
        batch_op.alter_column('PartID',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('BlendID',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('PartBlendID',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('PartBatchID',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)

    with op.batch_alter_table('powder_blends', schema=None) as batch_op:
        batch_op.alter_column('BlendID',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('BlendDate',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('BlendCreatedBy',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('AlloyID',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.create_unique_constraint(None, ['BlendID'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('email',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('password',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('first_name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('last_name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('role',
               existing_type=sa.TEXT(),
               type_=sa.String(length=10),
               existing_nullable=True)
        batch_op.create_unique_constraint(None, ['email'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('role',
               existing_type=sa.String(length=10),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('last_name',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('first_name',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('password',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('powder_blends', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('AlloyID',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('BlendCreatedBy',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('BlendDate',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('BlendID',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('powder_blend_parts', schema=None) as batch_op:
        batch_op.alter_column('PartBatchID',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('PartBlendID',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('BlendID',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('PartID',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('powder_blend_calc', schema=None) as batch_op:
        batch_op.alter_column('SieveCount',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('PartID',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
        batch_op.alter_column('BlendID',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)

    with op.batch_alter_table('material_products', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('AlloyID',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('SupplierProduct',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('ProductID',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('material_alloys', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('AlloyName',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('MaterialID',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('MaterialName',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('Alloy',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('AlloyID',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('machines', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('inventory_virgin_batch', schema=None) as batch_op:
        batch_op.alter_column('VirginLot',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('VirginPO',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('ProductID',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('BatchFacilityID',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('BatchTimeStamp',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('BatchCreatedBy',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('BatchID',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('builds_table', schema=None) as batch_op:
        batch_op.alter_column('BuildType',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('Platform',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('LayerCount',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('VeloFlowBuildTimeRecoater',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('VeloFlowBuildTimeSupport',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('VeloFlowBuildTimeSkin',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('VeloFlowSoftwareBase',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('VeloFlowSoftwareRev',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('RecoaterType',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('BreakoutTime',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('H13FilterSerial',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('F9FilterSerial',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('InertTime',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('FinalLaserHours',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('StartLaserHours',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('MaxDateDifference',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('MaxBuildTime',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('MaxFinishHeight',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('InitialDosingFactor',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('MeasuredLaserPower',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('ParameterRev',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('RecoaterSpeed',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('DosingBoostAmount',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('MaxChargeAmount',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('MinChargeAmount',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('PlateSerial',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('Location',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('BlendID',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('BuildFinishTime',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('BuildStartTime',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('Notes',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('BuildName',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('MachineID',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('AlloyName',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('SJBuild',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('FacilityName',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('CreatedOn',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('CreatedBy',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('BuildID',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True,
               autoincrement=True)

    op.create_table('_alembic_tmp_builds_table',
    sa.Column('BuildID', sa.INTEGER(), nullable=False),
    sa.Column('CreatedBy', sa.INTEGER(), nullable=True),
    sa.Column('CreatedOn', sa.VARCHAR(), nullable=True),
    sa.Column('FacilityName', sa.VARCHAR(), nullable=True),
    sa.Column('SJBuild', sa.INTEGER(), nullable=True),
    sa.Column('AlloyName', sa.VARCHAR(), nullable=True),
    sa.Column('MachineID', sa.VARCHAR(), nullable=True),
    sa.Column('BuildName', sa.VARCHAR(), nullable=True),
    sa.Column('PlateWeight', sa.FLOAT(), nullable=True),
    sa.Column('Layer', sa.FLOAT(), nullable=True),
    sa.Column('BuildHeight', sa.FLOAT(), nullable=True),
    sa.Column('Offset', sa.FLOAT(), nullable=True),
    sa.Column('ScaleX', sa.FLOAT(), nullable=True),
    sa.Column('ScaleY', sa.FLOAT(), nullable=True),
    sa.Column('Notes', sa.VARCHAR(), nullable=True),
    sa.Column('BuildStartTime', sa.VARCHAR(), nullable=True),
    sa.Column('BuildFinishTime', sa.VARCHAR(), nullable=True),
    sa.Column('BuildTime', sa.FLOAT(), nullable=True),
    sa.Column('FinishHeight', sa.FLOAT(), nullable=True),
    sa.Column('FinishPlateWeight', sa.FLOAT(), nullable=True),
    sa.Column('BlendID', sa.INTEGER(), nullable=True),
    sa.Column('CertificationBuild', sa.BOOLEAN(), nullable=True),
    sa.Column('FeedPowderHeight', sa.FLOAT(), nullable=True),
    sa.Column('EndFeedPowderHeight', sa.FLOAT(), nullable=True),
    sa.Column('PotentialBuildHeight', sa.FLOAT(), nullable=True),
    sa.Column('Location', sa.INTEGER(), nullable=True),
    sa.Column('PlateThickness', sa.FLOAT(), nullable=True),
    sa.Column('PlateSerial', sa.VARCHAR(), nullable=True),
    sa.Column('MinChargeAmount', sa.INTEGER(), nullable=True),
    sa.Column('MaxChargeAmount', sa.INTEGER(), nullable=True),
    sa.Column('DosingBoostAmount', sa.INTEGER(), nullable=True),
    sa.Column('RecoaterSpeed', sa.INTEGER(), nullable=True),
    sa.Column('ParameterRev', sa.VARCHAR(), nullable=True),
    sa.Column('MeasuredLaserPower', sa.INTEGER(), nullable=True),
    sa.Column('GasFlow', sa.FLOAT(), nullable=True),
    sa.Column('MaterialAdded', sa.BOOLEAN(), nullable=True),
    sa.Column('InitialDosingFactor', sa.INTEGER(), nullable=True),
    sa.Column('MaxFinishHeight', sa.INTEGER(), nullable=True),
    sa.Column('MaxBuildTime', sa.INTEGER(), nullable=True),
    sa.Column('MaxDateDifference', sa.INTEGER(), nullable=True),
    sa.Column('PlateTemperature', sa.FLOAT(), nullable=True),
    sa.Column('StartLaserHours', sa.INTEGER(), nullable=True),
    sa.Column('FinalLaserHours', sa.INTEGER(), nullable=True),
    sa.Column('InertTime', sa.VARCHAR(), nullable=True),
    sa.Column('F9FilterSerial', sa.VARCHAR(), nullable=True),
    sa.Column('H13FilterSerial', sa.VARCHAR(), nullable=True),
    sa.Column('FilterLight', sa.BOOLEAN(), nullable=True),
    sa.Column('EndPartPistonHeight', sa.FLOAT(), nullable=True),
    sa.Column('BreakoutTime', sa.VARCHAR(), nullable=True),
    sa.Column('CompletedWithoutStoppage', sa.BOOLEAN(), nullable=True),
    sa.Column('Humidity', sa.FLOAT(), nullable=True),
    sa.Column('BuildInterrupts', sa.BOOLEAN(), nullable=True),
    sa.Column('RecoaterType', sa.VARCHAR(), nullable=True),
    sa.Column('VeloFlowSoftwareRev', sa.VARCHAR(), nullable=True),
    sa.Column('VeloFlowSoftwareBase', sa.VARCHAR(), nullable=True),
    sa.Column('VeloFlowBuildTime', sa.FLOAT(), nullable=True),
    sa.Column('VeloFlowBuildTimeCore', sa.FLOAT(), nullable=True),
    sa.Column('VeloFlowBuildTimeSkin', sa.INTEGER(), nullable=True),
    sa.Column('VeloFlowBuildTimeSupport', sa.INTEGER(), nullable=True),
    sa.Column('VeloFlowBuildTimeRecoater', sa.INTEGER(), nullable=True),
    sa.Column('VeloPrintSWRev', sa.FLOAT(), nullable=True),
    sa.Column('SieveChange', sa.BOOLEAN(), nullable=True),
    sa.Column('LayerCount', sa.INTEGER(), nullable=True),
    sa.Column('FilterChange', sa.BOOLEAN(), nullable=True),
    sa.Column('BeamStabilityTestPerformed', sa.BOOLEAN(), nullable=True),
    sa.Column('LaserAlignmentTestPerformed', sa.BOOLEAN(), nullable=True),
    sa.Column('ThermalSensorTest', sa.BOOLEAN(), nullable=True),
    sa.Column('LaserFocus', sa.BOOLEAN(), nullable=True),
    sa.Column('PowderBed', sa.BOOLEAN(), nullable=True),
    sa.Column('PowderLevel', sa.FLOAT(), nullable=True),
    sa.Column('SieveLife', sa.FLOAT(), nullable=True),
    sa.Column('FilterPressureDrop', sa.FLOAT(), nullable=True),
    sa.Column('Platform', sa.VARCHAR(), nullable=True),
    sa.Column('BuildType', sa.VARCHAR(), nullable=True)
    )
    # ### end Alembic commands ###
